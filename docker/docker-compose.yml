services:
  db:
    build: 
      context: ..
      dockerfile: docker/postgres_dev/Dockerfile
    image: postgres_demo/postgres-bigm:latest
    container_name: postgres_bigm_demo
    hostname: postgres_bigm_demo
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - postgres-demo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  python:
    build: 
      context: ..
      dockerfile: docker/python_dev/Dockerfile
    image: postgres_demo/python-postgres-demo:latest
    container_name: python_postgres_demo
    hostname: python_postgres_demo
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ../src:/app/src
    depends_on:
      db:
        condition: service_healthy
    user: "${USER_ID}:${GROUP_ID}"
    networks:
      - postgres-demo-network
    tty: true

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_dev
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    networks:
      - postgres-demo-network
    depends_on:
      - db

networks:
  postgres-demo-network:
    driver: bridge

volumes:
  postgres_data:
